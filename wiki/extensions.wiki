#summary for developers: how to write extensions for IfcWebServer

== What are extensions, and why we need them ? ==
Extensions are classes methods. They extend the functionality of [http://code.google.com/p/ifcwebserver IfcWebServer] by adding a new value into the basic information inside the IFC files.
We need them because only the basic information are saved inside the IFC file, but we often need to apply filters/queries on derived information.

For example all sub classes of [http://buildingsmart-tech.org/ifc/IFC2x3/TC1/html/ifcprofileresource/lexical/ifcparameterizedprofiledef.htm IfcParameterizedProfileDef] contain  the basic information to describe the shape of the profile(like I T U L C Z Circle,Rectangle) but nothing more or less. 

Wouldn't be nice if we have a method called "area" for all of these classes so we can make advanced quires like "give me all building elements which are defined through a parameterized profile and have a section area bigger than 1 m^2^", or create reports include the profile section area?

[http://www.ifcwebserver.org/ifc.rb?ifc_file=AC10-Institute-Var-1.ifc&filter=o.area>10&report_cols=area&output_format=to_html&q=IFCARBITRARYCLOSEDPROFILEDEF Demo] : Get all ifcArbitraryClosedProfileDef instances which have a section area bigger than 10 m^2^ in the test file 'AC10-Institute-Var-1.ifc'

Result : 97 out of 483

In short words "Extensions" are the added value of the basic information and a handy way to extended the functionality of [http://code.google.com/p/ifcwebserver IfcWebServer] easily.
 

== How to extend/modfiy IfcWebServer ==
IfcWebServer is written up from the ground in 100% Ruby code without the need to use any external libraries.

As a final user or a hobby programmer may you wish to add new features or to modify something to meet your needs. The good news here that you don not have to be a professional programmer to be able to write your own extensions. The hard job is already done for you.

All what you need is to understand some simple concepts.

As an example, let us assume that you like to see the colors which are used inside the IFC model as real colors inside your internet browser not only as 3 numbers for Red,Green and Blue ratios as they are defined in the IFC spesification for the class [http://buildingsmart-tech.org/ifc/IFC2x3/TC1/html/ifcpresentationresource/lexical/ifccolourrgb.htm IfcColourRgb]:

{{{
ENTITY IfcColourRgb
SUBTYPE OF (	IfcColourSpecification);
Red	 : 	IfcNormalisedRatioMeasure;
Green	 : 	IfcNormalisedRatioMeasure;
Blue	 : 	IfcNormalisedRatioMeasure;
END_ENTITY;
}}}

 * Open your favorite text editor and write the Ruby code below

<code language="Ruby">
class IFCCOLOURRGB
 def to_RGB_HEX
  "#" + (sprintf("%02x",@red.to_f*255) + sprintf("%02x", @green.to_f*255) + sprintf("%02x",@blue.to_f*255)).upcase	
 end
 def to_html_div
  "<div style=\"background-color:" + to_RGB_HEX + "\">&nbsp;</div>"
 end
end
</code>
 * Login to IfcWebServer using your username/password 
 * Copy/Paste the Ruby code into "My extensions" textarea in the settings page & save.
 * Done

now the two new methods *to_html_div* and *to_RGB_HEX* are available and ready to use for all IfcColourRgb object instances.

Try it:
{{{
http://www.ifcwebserver.org/ifc.rb?ifc_file=FZK-Haus-AC11-IFC.ifc&report_cols=to_html_div|to_RGB_HEX&q=IFCCOLOURRGB
}}}

http://www.ifcwebserver.org/ifc.rb?ifc_file=FZK-Haus-AC11-IFC.ifc&report_cols=to_html_div|to_RGB_HEX&q=IFCCOLOURRGB

*Result:*

http://bci52.cib.bau.tu-dresden.de/ifcwebserver/doc/ifcwebServer_RGB_colors.png
-----